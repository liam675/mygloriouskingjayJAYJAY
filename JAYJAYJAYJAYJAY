-- New example script written by wally
-- You can suggest changes with a pull request or something

local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    Title = 'Harlem.cc',
    Center = true,
    AutoShow = true,
    TabPadding = 4, -- Smaller padding
    MenuFadeTime = 0.15, -- Slightly faster fade
    Size = UDim2.new(0, 475, 0, 360) -- Smaller window size
})

local Tabs = {
    Main = Window:AddTab('Main'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

-- ADD 4 GROUPBOXES TO MAIN TAB
local GroupboxOne = Tabs.Main:AddLeftGroupbox('Groupbox One')
local GroupboxTwo = Tabs.Main:AddLeftGroupbox('Groupbox Two')
local GroupboxThree = Tabs.Main:AddRightGroupbox('Groupbox Three')
local GroupboxFour = Tabs.Main:AddRightGroupbox('Groupbox Four')


getgenv().CamlockEnabled = false
getgenv().CamlockPrediction = 0.165
getgenv().CamlockKey = Enum.KeyCode.E

local CurrentTarget
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local function GetClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local pos = workspace.CurrentCamera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
            local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude

            if magnitude < shortestDistance then
                shortestDistance = magnitude
                closestPlayer = player
            end
        end
    end

    return closestPlayer
end

RunService.RenderStepped:Connect(function()
    if CamlockEnabled and CurrentTarget and CurrentTarget.Character and CurrentTarget.Character:FindFirstChild("HumanoidRootPart") then
        local predictedPosition = CurrentTarget.Character.HumanoidRootPart.Position + (CurrentTarget.Character.HumanoidRootPart.Velocity * CamlockPrediction)
        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, predictedPosition)
    end
end)

-- Camlock Toggle
GroupboxOne:AddToggle('CamlockToggle', {
    Text = 'Camlock Enabled',
    Default = false,
    Callback = function(value)
        CamlockEnabled = value
        if not value then
            CurrentTarget = nil
        end
    end
})

-- Camlock Keybind
GroupboxOne:AddLabel('Camlock Key'):AddKeyPicker('CamlockKeybind', {
    Default = 'E',
    NoUI = false,
    Text = 'Camlock keybind',
    Callback = function(value)
        -- Triggered when keybind is pressed
        if CamlockEnabled then
            if CurrentTarget then
                CurrentTarget = nil
            else
                CurrentTarget = GetClosestPlayer()
            end
        end
    end,
    ChangedCallback = function(newKey)
        CamlockKey = newKey
    end
})

-- Prediction Textbox
GroupboxOne:AddInput('CamlockPredictionBox', {
    Default = tostring(CamlockPrediction),
    Numeric = true,
    Finished = true,
    Text = 'Camlock Prediction',
    Tooltip = 'Adjust the prediction value',
    Placeholder = 'e.g. 0.165',
    Callback = function(Value)
        local num = tonumber(Value)
        if num then
            CamlockPrediction = num
        end
    end
})

-- UI Settings
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' })
Library.ToggleKeybind = Options.MenuKeybind

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })
ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')
SaveManager:BuildConfigSection(Tabs['UI Settings'])
ThemeManager:ApplyToTab(Tabs['UI Settings'])
SaveManager:LoadAutoloadConfig()

-- Watermark FPS & Ping
Library:SetWatermarkVisibility(true)
local FrameTimer = tick()
local FrameCounter = 0
local FPS = 60
local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
    FrameCounter += 1
    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter
        FrameTimer = tick()
        FrameCounter = 0
    end
    Library:SetWatermark(('LinoriaLib demo | %s fps | %s ms'):format(
        math.floor(FPS),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
    ))
end)

Library.KeybindFrame.Visible = true
Library:OnUnload(function()
    WatermarkConnection:Disconnect()
    print('Unloaded!')
    Library.Unloaded = true
end)
